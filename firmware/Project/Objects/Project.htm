<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Mon May 15 22:16:38 2023
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; snake &rArr; update_screen &rArr; control_matrix_led
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[a]">EXTI0_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[7]">EXTI11_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[b]">EXTI1_IRQHandler</a> from hk32f030m_it.o(.text.EXTI1_IRQHandler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[c]">EXTI2_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[d]">EXTI3_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[e]">EXTI4_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[f]">EXTI5_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[16]">EXTI6_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[17]">EXTI7_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from hk32f030m_it.o(.text.HardFault_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from hk32f030m_it.o(.text.NMI_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from hk32f030m_it.o(.text.PendSV_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from hk32f030m_it.o(.text.SVC_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from hk32f030m_it.o(.text.SysTick_Handler) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1c]">SystemInit</a> from system_hk32f030m.o(.text.SystemInit) referenced from keil_startup_hk32f030m.o(.text)
 <LI><a href="#[10]">TIM1_BRK_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[12]">TIM1_UP_TRG_COM_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[15]">TIM6_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1a]">USART1_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from keil_startup_hk32f030m.o(.text) referenced from keil_startup_hk32f030m.o(RESET)
 <LI><a href="#[1d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from keil_startup_hk32f030m.o(.text)
 <LI><a href="#[1b]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[56]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[57]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[58]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[59]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[5a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_hk32f030m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
</UL>

<P><STRONG><a name="[24]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_idivmod</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, idiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
</UL>

<P><STRONG><a name="[22]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[5f]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[60]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>ADC_ChannelConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_ChannelConfig))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[52]"></a>ADC_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
</UL>

<P><STRONG><a name="[3f]"></a>ADC_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[29]"></a>ADC_DeInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hk32f030m_adc.o(.text.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[3e]"></a>ADC_GetCalibrationFactor</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_GetCalibrationFactor))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[53]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
</UL>

<P><STRONG><a name="[40]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
</UL>

<P><STRONG><a name="[3c]"></a>ADC_Init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hk32f030m_adc.o(.text.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[41]"></a>ADC_StartOfConversion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_StartOfConversion))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[3b]"></a>ADC_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hk32f030m_adc.o(.text.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
</UL>

<P><STRONG><a name="[54]"></a>Delay</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, hardware.o(.text.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_screen
</UL>

<P><STRONG><a name="[b]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hk32f030m_it.o(.text.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hk32f030m_exti.o(.text.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>EXTI_DeInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hk32f030m_exti.o(.text.EXTI_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[2b]"></a>EXTI_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_exti.o(.text.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>EXTI_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, hk32f030m_exti.o(.text.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[38]"></a>GPIO_Init</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, hk32f030m_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_matrix_gpios
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_button_gpios
</UL>

<P><STRONG><a name="[51]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
</UL>

<P><STRONG><a name="[36]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hk32f030m_gpio.o(.text.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_matrix_led
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_matrix_gpios
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>NVIC_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, hk32f030m_misc.o(.text.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_clocks
</UL>

<P><STRONG><a name="[4a]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[3a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[2a]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hk32f030m_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SystemInit</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, system_hk32f030m.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_hk32f030m.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>blit_line</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drawing.o(.text.blit_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = blit_line
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[2d]"></a>breakout</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, main.o(.text.breakout))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = breakout &rArr; update_screen &rArr; control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blit_line
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_dot
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_framebuffer
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_screen
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>clear_framebuffer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drawing.o(.text.clear_framebuffer))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[35]"></a>control_matrix_led</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, hardware.o(.text.control_matrix_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_screen
</UL>

<P><STRONG><a name="[32]"></a>draw_dot</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drawing.o(.text.draw_dot))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[33]"></a>draw_line</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, drawing.o(.text.draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[46]"></a>draw_marquee</STRONG> (Thumb, 116 bytes, Stack size 44 bytes, drawing.o(.text.draw_marquee))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = draw_marquee
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
</UL>

<P><STRONG><a name="[37]"></a>init_button_gpios</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, hardware.o(.text.init_button_gpios))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = init_button_gpios &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>init_dpad_gpio</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, hardware.o(.text.init_dpad_gpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = init_dpad_gpio &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>init_gpio_clocks</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hardware.o(.text.init_gpio_clocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_gpio_clocks
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>init_matrix_gpios</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, hardware.o(.text.init_matrix_gpios))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = init_matrix_gpios &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>intro</STRONG> (Thumb, 312 bytes, Stack size 80 bytes, intro.o(.text.intro))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = intro &rArr; update_screen &rArr; control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;seed
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_marquee
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_framebuffer
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_screen
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>main</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = main &rArr; snake &rArr; update_screen &rArr; control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dpad_gpio
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_matrix_gpios
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_button_gpios
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_clocks
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[50]"></a>random</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, prng.o(.text.random))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = random
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
</UL>

<P><STRONG><a name="[47]"></a>seed</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, prng.o(.text.seed))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
</UL>

<P><STRONG><a name="[48]"></a>sleep</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, hardware.o(.text.sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sleep &rArr; SYSCFG_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_DeInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>snake</STRONG> (Thumb, 520 bytes, Stack size 280 bytes, snake.o(.text.snake))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = snake &rArr; update_screen &rArr; control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_dot
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_framebuffer
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_buttons
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_screen
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>update_buttons</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, hardware.o(.text.update_buttons))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_buttons
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[2e]"></a>update_screen</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, drawing.o(.text.update_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = update_screen &rArr; control_matrix_led
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_matrix_led
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snake
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intro
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breakout
</UL>

<P><STRONG><a name="[62]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[63]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[64]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
