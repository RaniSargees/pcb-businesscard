Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    hk32f030m_it.o(.ARM.exidx.text.NMI_Handler) refers to hk32f030m_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler) refers to hk32f030m_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SVC_Handler) refers to hk32f030m_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler) refers to hk32f030m_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler) refers to hk32f030m_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    hk32f030m_it.o(.text.EXTI1_IRQHandler) refers to hk32f030m_exti.o(.text.EXTI_GetITStatus) for EXTI_GetITStatus
    hk32f030m_it.o(.text.EXTI1_IRQHandler) refers to hk32f030m_exti.o(.text.EXTI_ClearITPendingBit) for EXTI_ClearITPendingBit
    hk32f030m_it.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to hk32f030m_it.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.breakout) refers to drawing.o(.text.update_screen) for update_screen
    main.o(.text.breakout) refers to hardware.o(.text.update_buttons) for update_buttons
    main.o(.text.breakout) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.text.breakout) refers to drawing.o(.text.clear_framebuffer) for clear_framebuffer
    main.o(.text.breakout) refers to drawing.o(.text.draw_dot) for draw_dot
    main.o(.text.breakout) refers to drawing.o(.text.draw_line) for draw_line
    main.o(.text.breakout) refers to drawing.o(.text.blit_line) for blit_line
    main.o(.text.breakout) refers to hardware.o(.bss.buttons) for buttons
    main.o(.text.breakout) refers to drawing.o(.data.framebuffer) for framebuffer
    main.o(.ARM.exidx.text.breakout) refers to main.o(.text.breakout) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.pong) refers to main.o(.text.pong) for [Anonymous Symbol]
    main.o(.text.main) refers to hardware.o(.text.init_gpio_clocks) for init_gpio_clocks
    main.o(.text.main) refers to hardware.o(.text.init_button_gpios) for init_button_gpios
    main.o(.text.main) refers to hardware.o(.text.sleep) for sleep
    main.o(.text.main) refers to hardware.o(.text.init_matrix_gpios) for init_matrix_gpios
    main.o(.text.main) refers to hardware.o(.text.init_dpad_gpio) for init_dpad_gpio
    main.o(.text.main) refers to main.o(.text.breakout) for breakout
    main.o(.text.main) refers to intro.o(.text.intro) for intro
    main.o(.text.main) refers to snake.o(.text.snake) for snake
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    drawing.o(.text.clear_framebuffer) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.clear_framebuffer) refers to drawing.o(.text.clear_framebuffer) for [Anonymous Symbol]
    drawing.o(.text.update_screen) refers to hardware.o(.text.control_matrix_led) for control_matrix_led
    drawing.o(.text.update_screen) refers to hardware.o(.text.Delay) for Delay
    drawing.o(.text.update_screen) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.update_screen) refers to drawing.o(.text.update_screen) for [Anonymous Symbol]
    drawing.o(.text.draw_line) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.draw_line) refers to drawing.o(.text.draw_line) for [Anonymous Symbol]
    drawing.o(.text.draw_dot) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.draw_dot) refers to drawing.o(.text.draw_dot) for [Anonymous Symbol]
    drawing.o(.text.clear_dot) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.clear_dot) refers to drawing.o(.text.clear_dot) for [Anonymous Symbol]
    drawing.o(.text.blit_line) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.blit_line) refers to drawing.o(.text.blit_line) for [Anonymous Symbol]
    drawing.o(.text.blit_pos) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.blit_pos) refers to drawing.o(.text.blit_pos) for [Anonymous Symbol]
    drawing.o(.text.draw_marquee) refers to bitfont.o(.data.font) for font
    drawing.o(.text.draw_marquee) refers to drawing.o(.data.framebuffer) for framebuffer
    drawing.o(.ARM.exidx.text.draw_marquee) refers to drawing.o(.text.draw_marquee) for [Anonymous Symbol]
    hardware.o(.ARM.exidx.text.Delay) refers to hardware.o(.text.Delay) for [Anonymous Symbol]
    hardware.o(.ARM.exidx.text.set_gpio_mode) refers to hardware.o(.text.set_gpio_mode) for [Anonymous Symbol]
    hardware.o(.text.init_gpio_clocks) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    hardware.o(.ARM.exidx.text.init_gpio_clocks) refers to hardware.o(.text.init_gpio_clocks) for [Anonymous Symbol]
    hardware.o(.text.init_matrix_gpios) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hardware.o(.text.init_matrix_gpios) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    hardware.o(.text.init_matrix_gpios) refers to hardware.o(.data.matrix_pins) for matrix_pins
    hardware.o(.text.init_matrix_gpios) refers to hardware.o(.data.matrix_ports) for matrix_ports
    hardware.o(.ARM.exidx.text.init_matrix_gpios) refers to hardware.o(.text.init_matrix_gpios) for [Anonymous Symbol]
    hardware.o(.text.init_button_gpios) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hardware.o(.ARM.exidx.text.init_button_gpios) refers to hardware.o(.text.init_button_gpios) for [Anonymous Symbol]
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_DeInit) for ADC_DeInit
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_StructInit) for ADC_StructInit
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_Init) for ADC_Init
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_ChannelConfig) for ADC_ChannelConfig
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_GetCalibrationFactor) for ADC_GetCalibrationFactor
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_Cmd) for ADC_Cmd
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    hardware.o(.text.init_dpad_gpio) refers to hk32f030m_adc.o(.text.ADC_StartOfConversion) for ADC_StartOfConversion
    hardware.o(.ARM.exidx.text.init_dpad_gpio) refers to hardware.o(.text.init_dpad_gpio) for [Anonymous Symbol]
    hardware.o(.text.control_matrix_led) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for GPIO_ResetBits
    hardware.o(.text.control_matrix_led) refers to hardware.o(.bss.control_matrix_led.current_x) for [Anonymous Symbol]
    hardware.o(.text.control_matrix_led) refers to hardware.o(.data.matrix_pins) for matrix_pins
    hardware.o(.text.control_matrix_led) refers to hardware.o(.data.matrix_ports) for matrix_ports
    hardware.o(.text.control_matrix_led) refers to hardware.o(.bss.control_matrix_led.current_y) for [Anonymous Symbol]
    hardware.o(.ARM.exidx.text.control_matrix_led) refers to hardware.o(.text.control_matrix_led) for [Anonymous Symbol]
    hardware.o(.text.update_buttons) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    hardware.o(.text.update_buttons) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    hardware.o(.text.update_buttons) refers to hk32f030m_adc.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    hardware.o(.text.update_buttons) refers to hk32f030m_adc.o(.text.ADC_GetConversionValue) for ADC_GetConversionValue
    hardware.o(.text.update_buttons) refers to hardware.o(.bss.buttons) for buttons
    hardware.o(.text.update_buttons) refers to hardware.o(.bss.analog) for analog
    hardware.o(.text.update_buttons) refers to hardware.o(.bss.button_change) for button_change
    hardware.o(.ARM.exidx.text.update_buttons) refers to hardware.o(.text.update_buttons) for [Anonymous Symbol]
    hardware.o(.text.sleep) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    hardware.o(.text.sleep) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    hardware.o(.text.sleep) refers to hk32f030m_misc.o(.text.NVIC_Init) for NVIC_Init
    hardware.o(.text.sleep) refers to hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig) for SYSCFG_EXTILineConfig
    hardware.o(.text.sleep) refers to hk32f030m_exti.o(.text.EXTI_Init) for EXTI_Init
    hardware.o(.text.sleep) refers to hk32f030m_exti.o(.text.EXTI_DeInit) for EXTI_DeInit
    hardware.o(.ARM.exidx.text.sleep) refers to hardware.o(.text.sleep) for [Anonymous Symbol]
    prng.o(.text.seed) refers to prng.o(.bss.state) for state
    prng.o(.ARM.exidx.text.seed) refers to prng.o(.text.seed) for [Anonymous Symbol]
    prng.o(.text.random) refers to prng.o(.bss.state) for state
    prng.o(.ARM.exidx.text.random) refers to prng.o(.text.random) for [Anonymous Symbol]
    snake.o(.text.snake) refers to memseta.o(.text) for __aeabi_memclr4
    snake.o(.text.snake) refers to drawing.o(.text.update_screen) for update_screen
    snake.o(.text.snake) refers to hardware.o(.text.update_buttons) for update_buttons
    snake.o(.text.snake) refers to drawing.o(.text.clear_framebuffer) for clear_framebuffer
    snake.o(.text.snake) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    snake.o(.text.snake) refers to prng.o(.text.random) for random
    snake.o(.text.snake) refers to uldiv.o(.text) for __aeabi_uldivmod
    snake.o(.text.snake) refers to drawing.o(.text.draw_dot) for draw_dot
    snake.o(.text.snake) refers to hardware.o(.bss.buttons) for buttons
    snake.o(.text.snake) refers to hardware.o(.bss.button_change) for button_change
    snake.o(.ARM.exidx.text.snake) refers to snake.o(.text.snake) for [Anonymous Symbol]
    intro.o(.text.intro) refers to hardware.o(.text.update_buttons) for update_buttons
    intro.o(.text.intro) refers to drawing.o(.text.clear_framebuffer) for clear_framebuffer
    intro.o(.text.intro) refers to drawing.o(.text.draw_marquee) for draw_marquee
    intro.o(.text.intro) refers to idiv_div0.o(.text) for __aeabi_idivmod
    intro.o(.text.intro) refers to drawing.o(.text.update_screen) for update_screen
    intro.o(.text.intro) refers to prng.o(.text.seed) for seed
    intro.o(.text.intro) refers to hardware.o(.bss.buttons) for buttons
    intro.o(.text.intro) refers to hardware.o(.bss.button_change) for button_change
    intro.o(.ARM.exidx.text.intro) refers to intro.o(.text.intro) for [Anonymous Symbol]
    hk32f030m_adc.o(.text.ADC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit) refers to hk32f030m_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Init) refers to hk32f030m_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit) refers to hk32f030m_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd) refers to hk32f030m_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to hk32f030m_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to hk32f030m_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to hk32f030m_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to hk32f030m_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to hk32f030m_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to hk32f030m_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to hk32f030m_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to hk32f030m_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to hk32f030m_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to hk32f030m_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to hk32f030m_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to hk32f030m_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to hk32f030m_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to hk32f030m_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to hk32f030m_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to hk32f030m_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to hk32f030m_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd) refers to hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func) refers to hk32f030m_adc.o(.text.ADC_Diff_Func) for [Anonymous Symbol]
    hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func) refers to hk32f030m_adc.o(.text.ADC_InterDelay_Func) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_DeInit) refers to hk32f030m_awu.o(.text.AWU_DeInit) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_CLKConfig) refers to hk32f030m_awu.o(.text.AWU_CLKConfig) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_TimerCounterAndStart) refers to hk32f030m_awu.o(.text.AWU_TimerCounterAndStart) for [Anonymous Symbol]
    hk32f030m_awu.o(.ARM.exidx.text.AWU_GetFlagStatus) refers to hk32f030m_awu.o(.text.AWU_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_DeInit) refers to hk32f030m_beep.o(.text.BEEP_DeInit) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_Init) refers to hk32f030m_beep.o(.text.BEEP_Init) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_Cmd) refers to hk32f030m_beep.o(.text.BEEP_Cmd) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_ClockSelect) refers to hk32f030m_beep.o(.text.BEEP_ClockSelect) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetPrescaler) refers to hk32f030m_beep.o(.text.BEEP_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetTRGOPrescaler) refers to hk32f030m_beep.o(.text.BEEP_SetTRGOPrescaler) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_ReadBeepStatus) refers to hk32f030m_beep.o(.text.BEEP_ReadBeepStatus) for [Anonymous Symbol]
    hk32f030m_beep.o(.ARM.exidx.text.BEEP_TRGOCmd) refers to hk32f030m_beep.o(.text.BEEP_TRGOCmd) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_DeInit) refers to hk32f030m_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to hk32f030m_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect) refers to hk32f030m_crc.o(.text.CRC_ReverseInputDataSelect) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd) refers to hk32f030m_crc.o(.text.CRC_ReverseOutputDataCmd) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_SetInitRegister) refers to hk32f030m_crc.o(.text.CRC_SetInitRegister) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to hk32f030m_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to hk32f030m_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to hk32f030m_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to hk32f030m_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    hk32f030m_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to hk32f030m_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to hk32f030m_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_Init) refers to hk32f030m_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to hk32f030m_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to hk32f030m_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to hk32f030m_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to hk32f030m_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to hk32f030m_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to hk32f030m_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to hk32f030m_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to hk32f030m_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock) refers to hk32f030m_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to hk32f030m_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to hk32f030m_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to hk32f030m_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to hk32f030m_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte) refers to hk32f030m_flash.o(.text.FLASH_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to hk32f030m_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to hk32f030m_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte) refers to hk32f030m_flash.o(.text.FLASH_OB_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_WRPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig) refers to hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to hk32f030m_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to hk32f030m_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to hk32f030m_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to hk32f030m_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to hk32f030m_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to hk32f030m_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to hk32f030m_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to hk32f030m_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte) refers to hk32f030m_flash.o(.text.EEPROM_EraseByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte) refers to hk32f030m_flash.o(.text.EEPROM_ProgramByte) for [Anonymous Symbol]
    hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID) refers to hk32f030m_flash.o(.text.Sys_GetDevice64BitUID) for [Anonymous Symbol]
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    hk32f030m_gpio.o(.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.rodata.cst16) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to hk32f030m_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init) refers to hk32f030m_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to hk32f030m_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to hk32f030m_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to hk32f030m_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to hk32f030m_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to hk32f030m_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write) refers to hk32f030m_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle) refers to hk32f030m_gpio.o(.text.GPIO_Toggle) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin) for [Anonymous Symbol]
    hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source) refers to hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source) for [Anonymous Symbol]
    hk32f030m_i2c.o(.text.I2C_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to hk32f030m_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_Init) refers to hk32f030m_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to hk32f030m_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to hk32f030m_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to hk32f030m_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to hk32f030m_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to hk32f030m_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_StopModeCmd) refers to hk32f030m_i2c.o(.text.I2C_StopModeCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to hk32f030m_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to hk32f030m_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to hk32f030m_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd) refers to hk32f030m_i2c.o(.text.I2C_SlaveByteControlCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig) refers to hk32f030m_i2c.o(.text.I2C_SlaveAddressConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd) refers to hk32f030m_i2c.o(.text.I2C_10BitAddressingModeCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd) refers to hk32f030m_i2c.o(.text.I2C_AutoEndCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReloadCmd) refers to hk32f030m_i2c.o(.text.I2C_ReloadCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig) refers to hk32f030m_i2c.o(.text.I2C_NumberOfBytesConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig) refers to hk32f030m_i2c.o(.text.I2C_MasterRequestConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to hk32f030m_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to hk32f030m_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd) refers to hk32f030m_i2c.o(.text.I2C_10BitAddressHeaderCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to hk32f030m_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched) refers to hk32f030m_i2c.o(.text.I2C_GetAddressMatched) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection) refers to hk32f030m_i2c.o(.text.I2C_GetTransferDirection) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TransferHandling) refers to hk32f030m_i2c.o(.text.I2C_TransferHandling) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd) refers to hk32f030m_i2c.o(.text.I2C_SMBusAlertCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_ClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_ExtendedClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd) refers to hk32f030m_i2c.o(.text.I2C_IdleClockTimeoutCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig) refers to hk32f030m_i2c.o(.text.I2C_TimeoutAConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig) refers to hk32f030m_i2c.o(.text.I2C_TimeoutBConfig) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to hk32f030m_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd) refers to hk32f030m_i2c.o(.text.I2C_PECRequestCmd) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to hk32f030m_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to hk32f030m_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_SendData) refers to hk32f030m_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to hk32f030m_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to hk32f030m_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to hk32f030m_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to hk32f030m_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to hk32f030m_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to hk32f030m_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to hk32f030m_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to hk32f030m_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to hk32f030m_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to hk32f030m_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init) refers to hk32f030m_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to hk32f030m_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to hk32f030m_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to hk32f030m_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to hk32f030m_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) refers to hk32f030m_rcc.o(.text.RCC_HSICmd) for RCC_HSICmd
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterDeepSleepMode) refers to hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030m_exti.o(.text.EXTI_GetFlagStatus) for EXTI_GetFlagStatus
    hk32f030m_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030m_exti.o(.text.EXTI_ClearFlag) for EXTI_ClearFlag
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterStopMode) refers to hk32f030m_pwr.o(.text.PWR_EnterStopMode) for [Anonymous Symbol]
    hk32f030m_pwr.o(.ARM.exidx.text.PWR_SetLDO_RefVolToADC) refers to hk32f030m_pwr.o(.text.PWR_SetLDO_RefVolToADC) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to hk32f030m_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp) refers to hk32f030m_rcc.o(.text.RCC_WaitForStartUp) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to hk32f030m_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to hk32f030m_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to hk32f030m_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_EXTCmd) refers to hk32f030m_gpio.o(.text.GPIO_Init) for GPIO_Init
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd) refers to hk32f030m_rcc.o(.text.RCC_EXTCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to hk32f030m_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to hk32f030m_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    hk32f030m_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.rodata.APBPrescTable) for APBPrescTable
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to hk32f030m_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to hk32f030m_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to hk32f030m_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to hk32f030m_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.SPI_I2S_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to hk32f030m_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit) refers to hk32f030m_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Init) refers to hk32f030m_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit) refers to hk32f030m_spi.o(.text.I2S_StructInit) for [Anonymous Symbol]
    hk32f030m_spi.o(.text.I2S_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_spi.o(.text.I2S_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Init) refers to hk32f030m_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd) refers to hk32f030m_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd) refers to hk32f030m_spi.o(.text.SPI_TIModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd) refers to hk32f030m_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to hk32f030m_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig) refers to hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to hk32f030m_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd) refers to hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8) refers to hk32f030m_spi.o(.text.SPI_SendData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16) refers to hk32f030m_spi.o(.text.SPI_I2S_SendData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8) refers to hk32f030m_spi.o(.text.SPI_ReceiveData8) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16) refers to hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig) refers to hk32f030m_spi.o(.text.SPI_CRCLengthConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to hk32f030m_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to hk32f030m_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to hk32f030m_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to hk32f030m_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to hk32f030m_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus) refers to hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to hk32f030m_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to hk32f030m_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.text.SYSCFG_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to hk32f030m_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_tim.o(.text.TIM_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit) refers to hk32f030m_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to hk32f030m_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to hk32f030m_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to hk32f030m_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to hk32f030m_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to hk32f030m_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to hk32f030m_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to hk32f030m_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to hk32f030m_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to hk32f030m_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to hk32f030m_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to hk32f030m_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd) refers to hk32f030m_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to hk32f030m_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to hk32f030m_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to hk32f030m_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to hk32f030m_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to hk32f030m_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to hk32f030m_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to hk32f030m_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to hk32f030m_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to hk32f030m_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to hk32f030m_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to hk32f030m_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to hk32f030m_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to hk32f030m_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to hk32f030m_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to hk32f030m_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to hk32f030m_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to hk32f030m_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to hk32f030m_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to hk32f030m_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to hk32f030m_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to hk32f030m_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit) refers to hk32f030m_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to hk32f030m_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to hk32f030m_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to hk32f030m_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to hk32f030m_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to hk32f030m_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to hk32f030m_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to hk32f030m_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to hk32f030m_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to hk32f030m_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to hk32f030m_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to hk32f030m_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to hk32f030m_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to hk32f030m_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to hk32f030m_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to hk32f030m_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to hk32f030m_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to hk32f030m_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit) refers to hk32f030m_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.text.USART_Init) refers to hk32f030m_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030m_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    hk32f030m_usart.o(.ARM.exidx.text.USART_Init) refers to hk32f030m_usart.o(.text.USART_Init) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit) refers to hk32f030m_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit) refers to hk32f030m_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to hk32f030m_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd) refers to hk32f030m_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to hk32f030m_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to hk32f030m_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to hk32f030m_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to hk32f030m_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to hk32f030m_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to hk32f030m_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to hk32f030m_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to hk32f030m_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to hk32f030m_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd) refers to hk32f030m_usart.o(.text.USART_STOPModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig) refers to hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to hk32f030m_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SendData) refers to hk32f030m_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to hk32f030m_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress) refers to hk32f030m_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to hk32f030m_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to hk32f030m_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd) refers to hk32f030m_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to hk32f030m_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to hk32f030m_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to hk32f030m_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount) refers to hk32f030m_usart.o(.text.USART_SetAutoRetryCount) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength) refers to hk32f030m_usart.o(.text.USART_SetBlockLength) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to hk32f030m_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to hk32f030m_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd) refers to hk32f030m_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to hk32f030m_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to hk32f030m_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig) refers to hk32f030m_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to hk32f030m_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to hk32f030m_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to hk32f030m_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to hk32f030m_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to hk32f030m_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to hk32f030m_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.text.WWDG_DeInit) refers to hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to hk32f030m_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to hk32f030m_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to hk32f030m_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to hk32f030m_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to hk32f030m_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to hk32f030m_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to hk32f030m_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to hk32f030m_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    system_hk32f030m.o(.ARM.exidx.text.SystemInit) refers to system_hk32f030m.o(.text.SystemInit) for [Anonymous Symbol]
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.data.SystemCoreClock) for SystemCoreClock
    system_hk32f030m.o(.text.SystemCoreClockUpdate) refers to hk32f030m_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_hk32f030m.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    keil_startup_hk32f030m.o(RESET) refers to keil_startup_hk32f030m.o(STACK) for __initial_sp
    keil_startup_hk32f030m.o(RESET) refers to keil_startup_hk32f030m.o(.text) for Reset_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.NMI_Handler) for NMI_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.HardFault_Handler) for HardFault_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.SVC_Handler) for SVC_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.PendSV_Handler) for PendSV_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.SysTick_Handler) for SysTick_Handler
    keil_startup_hk32f030m.o(RESET) refers to hk32f030m_it.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    keil_startup_hk32f030m.o(.text) refers to system_hk32f030m.o(.text.SystemInit) for SystemInit
    keil_startup_hk32f030m.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to keil_startup_hk32f030m.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to keil_startup_hk32f030m.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing hk32f030m_it.o(.text), (0 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing hk32f030m_it.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.breakout), (8 bytes).
    Removing main.o(.text.pong), (2 bytes).
    Removing main.o(.ARM.exidx.text.pong), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing drawing.o(.text), (0 bytes).
    Removing drawing.o(.ARM.exidx.text.clear_framebuffer), (8 bytes).
    Removing drawing.o(.ARM.exidx.text.update_screen), (8 bytes).
    Removing drawing.o(.ARM.exidx.text.draw_line), (8 bytes).
    Removing drawing.o(.ARM.exidx.text.draw_dot), (8 bytes).
    Removing drawing.o(.text.clear_dot), (24 bytes).
    Removing drawing.o(.ARM.exidx.text.clear_dot), (8 bytes).
    Removing drawing.o(.ARM.exidx.text.blit_line), (8 bytes).
    Removing drawing.o(.text.blit_pos), (36 bytes).
    Removing drawing.o(.ARM.exidx.text.blit_pos), (8 bytes).
    Removing drawing.o(.ARM.exidx.text.draw_marquee), (8 bytes).
    Removing hardware.o(.text), (0 bytes).
    Removing hardware.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing hardware.o(.text.set_gpio_mode), (48 bytes).
    Removing hardware.o(.ARM.exidx.text.set_gpio_mode), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.init_gpio_clocks), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.init_matrix_gpios), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.init_button_gpios), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.init_dpad_gpio), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.control_matrix_led), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.update_buttons), (8 bytes).
    Removing hardware.o(.ARM.exidx.text.sleep), (8 bytes).
    Removing bitfont.o(.text), (0 bytes).
    Removing prng.o(.text), (0 bytes).
    Removing prng.o(.ARM.exidx.text.seed), (8 bytes).
    Removing prng.o(.ARM.exidx.text.random), (8 bytes).
    Removing snake.o(.text), (0 bytes).
    Removing snake.o(.ARM.exidx.text.snake), (8 bytes).
    Removing intro.o(.text), (0 bytes).
    Removing intro.o(.ARM.exidx.text.intro), (8 bytes).
    Removing intro.o(.rodata..L__const.intro.text_snake), (5 bytes).
    Removing intro.o(.rodata.str1.1), (5 bytes).
    Removing hk32f030m_adc.o(.text), (0 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClockModeConfig), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_JitterCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AutoPowerOffCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_WaitModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (14 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_VrefintCmd), (26 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ContinuousModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_DiscModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_OverrunModeCmd), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_StopOfConversion), (10 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ITConfig), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_GetITStatus), (20 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_ClearITPendingBit), (4 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_AWDWakeup_Cmd), (28 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_AWDWakeup_Cmd), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_Diff_Func), (24 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_Diff_Func), (8 bytes).
    Removing hk32f030m_adc.o(.text.ADC_InterDelay_Func), (22 bytes).
    Removing hk32f030m_adc.o(.ARM.exidx.text.ADC_InterDelay_Func), (8 bytes).
    Removing hk32f030m_awu.o(.text), (0 bytes).
    Removing hk32f030m_awu.o(.text.AWU_DeInit), (16 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_DeInit), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_CLKConfig), (24 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_CLKConfig), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_TimerCounterAndStart), (52 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_TimerCounterAndStart), (8 bytes).
    Removing hk32f030m_awu.o(.text.AWU_GetFlagStatus), (16 bytes).
    Removing hk32f030m_awu.o(.ARM.exidx.text.AWU_GetFlagStatus), (8 bytes).
    Removing hk32f030m_beep.o(.text), (0 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_DeInit), (28 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_DeInit), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_Init), (88 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_Init), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_Cmd), (44 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_Cmd), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_ClockSelect), (24 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_ClockSelect), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_SetPrescaler), (20 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetPrescaler), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_SetTRGOPrescaler), (20 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_SetTRGOPrescaler), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_ReadBeepStatus), (12 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_ReadBeepStatus), (8 bytes).
    Removing hk32f030m_beep.o(.text.BEEP_TRGOCmd), (44 bytes).
    Removing hk32f030m_beep.o(.ARM.exidx.text.BEEP_TRGOCmd), (8 bytes).
    Removing hk32f030m_crc.o(.text), (0 bytes).
    Removing hk32f030m_crc.o(.text.CRC_DeInit), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ResetDR), (16 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ReverseInputDataSelect), (20 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_ReverseOutputDataCmd), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_SetInitRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_SetInitRegister), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_CalcCRC), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_CalcBlockCRC), (24 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_SetIDRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing hk32f030m_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing hk32f030m_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing hk32f030m_exti.o(.text), (0 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_StructInit), (14 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_GetFlagStatus), (16 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing hk32f030m_exti.o(.text.EXTI_ClearFlag), (12 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing hk32f030m_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_flash.o(.text), (0 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_SetLatency), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ErasePage), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_WaitForLastOperation), (100 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_EraseAllPages), (184 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramHalfWord), (180 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ProgramByte), (180 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Unlock), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_EraseByte), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WRPConfig), (636 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_RDPConfig), (412 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_UserConfig), (408 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_IWDG_RLRConfig), (432 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_LSILPConfig), (332 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_DBGCLKConfig), (332 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_WriteUser), (204 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_ProgramData), (200 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_OB_GetRDP), (20 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ITConfig), (28 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetFlagStatus), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing hk32f030m_flash.o(.text.FLASH_GetStatus), (32 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_EraseByte), (192 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_EraseByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.EEPROM_ProgramByte), (184 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.EEPROM_ProgramByte), (8 bytes).
    Removing hk32f030m_flash.o(.text.Sys_GetDevice64BitUID), (16 bytes).
    Removing hk32f030m_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID), (8 bytes).
    Removing hk32f030m_gpio.o(.text), (0 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_DeInit), (44 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_StructInit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadInputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputDataBit), (10 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_ReadOutputData), (6 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_SetBits), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_WriteBit), (16 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_PinAFConfig), (32 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_PinAFConfig), (116 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_ChangePin), (28 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin), (8 bytes).
    Removing hk32f030m_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source), (12 bytes).
    Removing hk32f030m_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source), (8 bytes).
    Removing hk32f030m_gpio.o(.rodata.cst16), (16 bytes).
    Removing hk32f030m_i2c.o(.text), (0 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_DeInit), (36 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_Init), (96 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StructInit), (22 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_Cmd), (16 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SoftwareResetCmd), (18 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ITConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StretchClockCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_StopModeCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_StopModeCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_DualAddressCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_OwnAddress2Config), (28 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GeneralCallCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SlaveByteControlCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SlaveAddressConfig), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_10BitAddressingModeCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_AutoEndCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReloadCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReloadCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_NumberOfBytesConfig), (16 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_MasterRequestConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GenerateSTART), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GenerateSTOP), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_10BitAddressHeaderCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_AcknowledgeConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetAddressMatched), (10 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetTransferDirection), (12 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TransferHandling), (36 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TransferHandling), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SMBusAlertCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClockTimeoutCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ExtendedClockTimeoutCmd), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_IdleClockTimeoutCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TimeoutAConfig), (24 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_TimeoutBConfig), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_CalculatePEC), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_PECRequestCmd), (20 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetPEC), (6 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReadRegister), (22 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ReceiveData), (6 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetFlagStatus), (10 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClearFlag), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_GetITStatus), (48 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing hk32f030m_i2c.o(.text.I2C_ClearITPendingBit), (4 bytes).
    Removing hk32f030m_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_iwdg.o(.text), (0 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_WriteAccessCmd), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetPrescaler), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetReload), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_ReloadCounter), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_SetWindowValue), (12 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_Enable), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing hk32f030m_iwdg.o(.text.IWDG_GetFlagStatus), (16 bytes).
    Removing hk32f030m_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing hk32f030m_misc.o(.text), (0 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing hk32f030m_misc.o(.text.NVIC_SystemLPConfig), (28 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing hk32f030m_misc.o(.text.SysTick_CLKSourceConfig), (28 bytes).
    Removing hk32f030m_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing hk32f030m_pwr.o(.text), (0 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_DeInit), (22 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterSleepMode), (32 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterDeepSleepMode), (136 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterDeepSleepMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_EnterStopMode), (84 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_EnterStopMode), (8 bytes).
    Removing hk32f030m_pwr.o(.text.PWR_SetLDO_RefVolToADC), (28 bytes).
    Removing hk32f030m_pwr.o(.ARM.exidx.text.PWR_SetLDO_RefVolToADC), (8 bytes).
    Removing hk32f030m_rcc.o(.text), (0 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_DeInit), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_WaitForStartUp), (92 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetFlagStatus), (40 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_EXTCmd), (88 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_EXTCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClockSecuritySystemCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_MCOConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_PCLKConfig), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ADCCLKConfig), (64 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_I2CCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_USARTCLKConfig), (24 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetClocksFreq), (200 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_AHBPeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_APB1PeriphResetCmd), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ITConfig), (28 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_GetITStatus), (16 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing hk32f030m_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_rcc.o(.rodata.AHBPrescTable), (32 bytes).
    Removing hk32f030m_rcc.o(.rodata.APBPrescTable), (8 bytes).
    Removing hk32f030m_spi.o(.text), (0 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_DeInit), (36 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_StructInit), (26 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Init), (88 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_StructInit), (14 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_StructInit), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Init), (184 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TIModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TIModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.I2S_Cmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_DataSizeConfig), (16 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_RxFIFOThresholdConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_BiDirectionalLineConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSInternalSoftwareConfig), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SSOutputCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_NSSPulseModeCmd), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_SendData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_SendData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_SendData16), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_SendData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_ReceiveData8), (4 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_ReceiveData8), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ReceiveData16), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CRCLengthConfig), (20 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_CalculateCRC), (28 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_TransmitCRC), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRC), (16 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetCRCPolynomial), (6 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ITConfig), (36 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetTransmissionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_GetReceptionFIFOStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetFlagStatus), (10 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_ClearFlag), (12 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing hk32f030m_spi.o(.text.SPI_I2S_GetITStatus), (22 bytes).
    Removing hk32f030m_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing hk32f030m_syscfg.o(.text), (0 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_DeInit), (22 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig), (24 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (28 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing hk32f030m_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text), (0 bytes).
    Removing hk32f030m_tim.o(.text.TIM_DeInit), (88 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TimeBaseInit), (84 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TimeBaseStructInit), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CounterModeConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetPrescaler), (6 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateDisableConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_UpdateRequestConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ARRPreloadConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOnePulseMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetClockDivision), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_Cmd), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRConfig), (30 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_BDTRStructInit), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CtrlPWMOutputs), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1Init), (104 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2Init), (128 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3Init), (120 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4Init), (108 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCxM), (68 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC1Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC2Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC3Config), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ForcedOC4Config), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCPreloadControl), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PreloadConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PreloadConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3FastConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4FastConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC1Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC2Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC3Ref), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearOC4Ref), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC1NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2PolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC2NPolarityConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC3NPolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_OC4PolarityConfig), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOCREFClear), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxCmd), (26 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_CCxNCmd), (36 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectCOM), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICInit), (316 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC1Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC2Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC3Prescaler), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SetIC4Prescaler), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ICStructInit), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_PWMIConfig), (296 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ITConfig), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetFlagStatus), (10 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearFlag), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_GetITStatus), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ClearITPendingBit), (12 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_InternalClockConfig), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectInputTrigger), (16 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_TIxExternalClockConfig), (124 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode1Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRConfig), (18 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_ETRClockMode2Config), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectOutputTrigger), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectMasterSlaveMode), (20 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_EncoderInterfaceConfig), (52 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing hk32f030m_tim.o(.text.TIM_SelectHallSensor), (28 bytes).
    Removing hk32f030m_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing hk32f030m_usart.o(.text), (0 bytes).
    Removing hk32f030m_usart.o(.text.USART_DeInit), (36 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_Init), (160 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StructInit), (22 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockInit), (26 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClockStructInit), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_Cmd), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DirectionModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverSampling8Cmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OneBitMethodCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MSBFirstCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DataInvCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_InvPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SWAPPinCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ReceiverTimeOutCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetReceiverTimeOut), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetPrescaler), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_STOPModeCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_STOPModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_StopModeWakeUpSourceConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AutoBaudRateConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SendData), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ReceiveData), (12 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAddress), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_AddressDetectionConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_LINCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_HalfDuplexCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SmartCardNACKCmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetAutoRetryCount), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetBlockLength), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetBlockLength), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDAConfig), (16 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_IrDACmd), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DECmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_DEPolarityConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEAssertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_SetDEDeassertionTime), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ITConfig), (46 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_RequestCmd), (20 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_OverrunDetectionConfig), (18 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClearFlag), (4 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_GetITStatus), (42 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing hk32f030m_usart.o(.text.USART_ClearITPendingBit), (10 bytes).
    Removing hk32f030m_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing hk32f030m_wwdg.o(.text), (0 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_DeInit), (22 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetPrescaler), (20 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetWindowValue), (36 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_EnableIT), (20 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_SetCounter), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_Enable), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_GetFlagStatus), (16 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing hk32f030m_wwdg.o(.text.WWDG_ClearFlag), (12 bytes).
    Removing hk32f030m_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing system_hk32f030m.o(.text), (0 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_hk32f030m.o(.text.SystemCoreClockUpdate), (64 bytes).
    Removing system_hk32f030m.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_hk32f030m.o(.data.SystemCoreClock), (4 bytes).
    Removing keil_startup_hk32f030m.o(HEAP), (512 bytes).

770 unused section(s) (total 16884 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ..\Source\Libraries\CMSIS\HK32F030M\Source\KEIL_Startup_hk32f030m.s 0x00000000   Number         0  keil_startup_hk32f030m.o ABSOLUTE
    bitfont.c                                0x00000000   Number         0  bitfont.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    drawing.c                                0x00000000   Number         0  drawing.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    hardware.c                               0x00000000   Number         0  hardware.o ABSOLUTE
    hk32f030m_adc.c                          0x00000000   Number         0  hk32f030m_adc.o ABSOLUTE
    hk32f030m_awu.c                          0x00000000   Number         0  hk32f030m_awu.o ABSOLUTE
    hk32f030m_beep.c                         0x00000000   Number         0  hk32f030m_beep.o ABSOLUTE
    hk32f030m_crc.c                          0x00000000   Number         0  hk32f030m_crc.o ABSOLUTE
    hk32f030m_exti.c                         0x00000000   Number         0  hk32f030m_exti.o ABSOLUTE
    hk32f030m_flash.c                        0x00000000   Number         0  hk32f030m_flash.o ABSOLUTE
    hk32f030m_gpio.c                         0x00000000   Number         0  hk32f030m_gpio.o ABSOLUTE
    hk32f030m_i2c.c                          0x00000000   Number         0  hk32f030m_i2c.o ABSOLUTE
    hk32f030m_it.c                           0x00000000   Number         0  hk32f030m_it.o ABSOLUTE
    hk32f030m_iwdg.c                         0x00000000   Number         0  hk32f030m_iwdg.o ABSOLUTE
    hk32f030m_misc.c                         0x00000000   Number         0  hk32f030m_misc.o ABSOLUTE
    hk32f030m_pwr.c                          0x00000000   Number         0  hk32f030m_pwr.o ABSOLUTE
    hk32f030m_rcc.c                          0x00000000   Number         0  hk32f030m_rcc.o ABSOLUTE
    hk32f030m_spi.c                          0x00000000   Number         0  hk32f030m_spi.o ABSOLUTE
    hk32f030m_syscfg.c                       0x00000000   Number         0  hk32f030m_syscfg.o ABSOLUTE
    hk32f030m_tim.c                          0x00000000   Number         0  hk32f030m_tim.o ABSOLUTE
    hk32f030m_usart.c                        0x00000000   Number         0  hk32f030m_usart.o ABSOLUTE
    hk32f030m_wwdg.c                         0x00000000   Number         0  hk32f030m_wwdg.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    intro.c                                  0x00000000   Number         0  intro.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    prng.c                                   0x00000000   Number         0  prng.o ABSOLUTE
    snake.c                                  0x00000000   Number         0  snake.o ABSOLUTE
    system_hk32f030m.c                       0x00000000   Number         0  system_hk32f030m.o ABSOLUTE
    RESET                                    0x08000000   Section      192  keil_startup_hk32f030m.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  keil_startup_hk32f030m.o(.text)
    .text                                    0x080000f0   Section        0  uldiv.o(.text)
    .text                                    0x08000150   Section        0  memseta.o(.text)
    .text                                    0x08000174   Section        0  uidiv_div0.o(.text)
    .text                                    0x080001b4   Section        0  idiv_div0.o(.text)
    .text                                    0x08000204   Section        0  llshl.o(.text)
    .text                                    0x08000224   Section        0  llushr.o(.text)
    .text                                    0x08000248   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x0800026c   Section        0  hk32f030m_adc.o(.text.ADC_ChannelConfig)
    [Anonymous Symbol]                       0x08000276   Section        0  hk32f030m_adc.o(.text.ADC_ClearFlag)
    [Anonymous Symbol]                       0x0800027a   Section        0  hk32f030m_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x0800028c   Section        0  hk32f030m_adc.o(.text.ADC_DeInit)
    __arm_cp.0_0                             0x080002ac   Number         4  hk32f030m_adc.o(.text.ADC_DeInit)
    [Anonymous Symbol]                       0x080002b0   Section        0  hk32f030m_adc.o(.text.ADC_GetCalibrationFactor)
    __arm_cp.17_0                            0x080002d8   Number         4  hk32f030m_adc.o(.text.ADC_GetCalibrationFactor)
    [Anonymous Symbol]                       0x080002dc   Section        0  hk32f030m_adc.o(.text.ADC_GetConversionValue)
    [Anonymous Symbol]                       0x080002e2   Section        0  hk32f030m_adc.o(.text.ADC_GetFlagStatus)
    [Anonymous Symbol]                       0x080002fc   Section        0  hk32f030m_adc.o(.text.ADC_Init)
    __arm_cp.1_0                             0x0800031c   Number         4  hk32f030m_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08000320   Section        0  hk32f030m_adc.o(.text.ADC_StartOfConversion)
    [Anonymous Symbol]                       0x0800032a   Section        0  hk32f030m_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x08000338   Section        0  hardware.o(.text.Delay)
    [Anonymous Symbol]                       0x08000352   Section        0  hk32f030m_it.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08000368   Section        0  hk32f030m_exti.o(.text.EXTI_ClearITPendingBit)
    __arm_cp.7_0                             0x08000370   Number         4  hk32f030m_exti.o(.text.EXTI_ClearITPendingBit)
    [Anonymous Symbol]                       0x08000374   Section        0  hk32f030m_exti.o(.text.EXTI_DeInit)
    [Anonymous Symbol]                       0x08000388   Section        0  hk32f030m_exti.o(.text.EXTI_GetITStatus)
    [Anonymous Symbol]                       0x080003a0   Section        0  hk32f030m_exti.o(.text.EXTI_Init)
    __arm_cp.1_0                             0x080003fc   Number         4  hk32f030m_exti.o(.text.EXTI_Init)
    [Anonymous Symbol]                       0x08000400   Section        0  hk32f030m_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08000488   Section        0  hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x08000492   Section        0  hk32f030m_gpio.o(.text.GPIO_ResetBits)
    [Anonymous Symbol]                       0x08000496   Section        0  hk32f030m_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08000498   Section        0  hk32f030m_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x0800049c   Section        0  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x080004e0   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x080004e4   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x080004e8   Number         4  hk32f030m_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x080004ec   Section        0  hk32f030m_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080004f0   Section        0  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.7_0                             0x08000508   Number         4  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x0800050c   Section        0  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    __arm_cp.19_0                            0x08000524   Number         4  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x08000528   Section        0  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.18_0                            0x08000540   Number         4  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x08000544   Section        0  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    __arm_cp.21_0                            0x0800055c   Number         4  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    [Anonymous Symbol]                       0x08000560   Section        0  hk32f030m_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08000564   Section        0  hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig)
    __arm_cp.3_0                             0x08000584   Number         4  hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig)
    [Anonymous Symbol]                       0x08000588   Section        0  hk32f030m_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0800058c   Section        0  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_0                             0x08000668   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_1                             0x0800066c   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_2                             0x08000670   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_3                             0x08000674   Number         4  system_hk32f030m.o(.text.SystemInit)
    __arm_cp.0_5                             0x08000678   Number         4  system_hk32f030m.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800067c   Section        0  drawing.o(.text.blit_line)
    [Anonymous Symbol]                       0x08000690   Section        0  main.o(.text.breakout)
    __arm_cp.0_0                             0x08000804   Number         4  main.o(.text.breakout)
    __arm_cp.0_2                             0x08000808   Number         4  main.o(.text.breakout)
    [Anonymous Symbol]                       0x0800080c   Section        0  drawing.o(.text.clear_framebuffer)
    [Anonymous Symbol]                       0x08000820   Section        0  hardware.o(.text.control_matrix_led)
    __arm_cp.6_0                             0x08000954   Number         4  hardware.o(.text.control_matrix_led)
    __arm_cp.6_3                             0x08000958   Number         4  hardware.o(.text.control_matrix_led)
    [Anonymous Symbol]                       0x0800095c   Section        0  drawing.o(.text.draw_dot)
    [Anonymous Symbol]                       0x08000970   Section        0  drawing.o(.text.draw_line)
    [Anonymous Symbol]                       0x080009d8   Section        0  drawing.o(.text.draw_marquee)
    __arm_cp.7_0                             0x08000a4c   Number         4  drawing.o(.text.draw_marquee)
    __arm_cp.7_1                             0x08000a50   Number         4  drawing.o(.text.draw_marquee)
    [Anonymous Symbol]                       0x08000a54   Section        0  hardware.o(.text.init_button_gpios)
    __arm_cp.4_0                             0x08000a80   Number         4  hardware.o(.text.init_button_gpios)
    [Anonymous Symbol]                       0x08000a84   Section        0  hardware.o(.text.init_dpad_gpio)
    __arm_cp.5_0                             0x08000af4   Number         4  hardware.o(.text.init_dpad_gpio)
    __arm_cp.5_1                             0x08000af8   Number         4  hardware.o(.text.init_dpad_gpio)
    [Anonymous Symbol]                       0x08000afc   Section        0  hardware.o(.text.init_gpio_clocks)
    [Anonymous Symbol]                       0x08000b24   Section        0  hardware.o(.text.init_matrix_gpios)
    __arm_cp.3_0                             0x08000b8c   Number         4  hardware.o(.text.init_matrix_gpios)
    __arm_cp.3_1                             0x08000b90   Number         4  hardware.o(.text.init_matrix_gpios)
    [Anonymous Symbol]                       0x08000b94   Section        0  intro.o(.text.intro)
    __arm_cp.0_1                             0x08000ce4   Number         4  intro.o(.text.intro)
    __arm_cp.0_2                             0x08000ce8   Number         4  intro.o(.text.intro)
    __arm_cp.0_3                             0x08000cec   Number         4  intro.o(.text.intro)
    __arm_cp.0_4                             0x08000cf0   Number         4  intro.o(.text.intro)
    __arm_cp.0_5                             0x08000cf4   Number         4  intro.o(.text.intro)
    __arm_cp.0_6                             0x08000cf8   Number         4  intro.o(.text.intro)
    __arm_cp.0_7                             0x08000cfc   Number         4  intro.o(.text.intro)
    [Anonymous Symbol]                       0x08000d00   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08000d2c   Section        0  prng.o(.text.random)
    [Anonymous Symbol]                       0x08000d5c   Section        0  prng.o(.text.seed)
    __arm_cp.0_0                             0x08000d74   Number         4  prng.o(.text.seed)
    [Anonymous Symbol]                       0x08000d78   Section        0  hardware.o(.text.sleep)
    __arm_cp.8_0                             0x08000dd4   Number         4  hardware.o(.text.sleep)
    [Anonymous Symbol]                       0x08000dd8   Section        0  snake.o(.text.snake)
    __arm_cp.0_0                             0x08000fe0   Number         4  snake.o(.text.snake)
    __arm_cp.0_1                             0x08000fe4   Number         4  snake.o(.text.snake)
    __arm_cp.0_2                             0x08000fe8   Number         4  snake.o(.text.snake)
    [Anonymous Symbol]                       0x08000ff4   Section        0  hardware.o(.text.update_buttons)
    __arm_cp.7_0                             0x08001094   Number         4  hardware.o(.text.update_buttons)
    __arm_cp.7_1                             0x08001098   Number         4  hardware.o(.text.update_buttons)
    __arm_cp.7_2                             0x0800109c   Number         4  hardware.o(.text.update_buttons)
    __arm_cp.7_3                             0x080010a0   Number         4  hardware.o(.text.update_buttons)
    __arm_cp.7_4                             0x080010a4   Number         4  hardware.o(.text.update_buttons)
    __arm_cp.7_5                             0x080010a8   Number         4  hardware.o(.text.update_buttons)
    [Anonymous Symbol]                       0x080010ac   Section        0  drawing.o(.text.update_screen)
    __arm_cp.1_0                             0x080010f0   Number         4  drawing.o(.text.update_screen)
    i.__scatterload_copy                     0x080010f4   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08001102   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08001104   Section       14  handlers.o(i.__scatterload_zeroinit)
    control_matrix_led.current_x             0x200000fb   Data           1  hardware.o(.bss.control_matrix_led.current_x)
    [Anonymous Symbol]                       0x200000fb   Section        0  hardware.o(.bss.control_matrix_led.current_x)
    control_matrix_led.current_y             0x200000fc   Data           1  hardware.o(.bss.control_matrix_led.current_y)
    [Anonymous Symbol]                       0x200000fc   Section        0  hardware.o(.bss.control_matrix_led.current_y)
    STACK                                    0x20000108   Section      512  keil_startup_hk32f030m.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  keil_startup_hk32f030m.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  keil_startup_hk32f030m.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  keil_startup_hk32f030m.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  keil_startup_hk32f030m.o(.text)
    ADC1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI0_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI11_IRQHandler                        0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI2_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI3_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI4_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI5_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI6_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    EXTI7_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    SPI1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_BRK_IRQHandler                      0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_CC_IRQHandler                       0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM1_UP_TRG_COM_IRQHandler               0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM2_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    TIM6_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    USART1_IRQHandler                        0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030m.o(.text)
    __aeabi_uldivmod                         0x080000f1   Thumb Code    96  uldiv.o(.text)
    __aeabi_memset                           0x08000151   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000151   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000151   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800015f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800015f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800015f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000163   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x08000175   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x08000175   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_idiv                             0x080001b5   Thumb Code     0  idiv_div0.o(.text)
    __aeabi_idivmod                          0x080001b5   Thumb Code    74  idiv_div0.o(.text)
    __aeabi_llsl                             0x08000205   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x08000205   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08000225   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x08000225   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x08000249   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000249   Thumb Code     0  init.o(.text)
    ADC_ChannelConfig                        0x0800026d   Thumb Code    10  hk32f030m_adc.o(.text.ADC_ChannelConfig)
    ADC_ClearFlag                            0x08000277   Thumb Code     4  hk32f030m_adc.o(.text.ADC_ClearFlag)
    ADC_Cmd                                  0x0800027b   Thumb Code    18  hk32f030m_adc.o(.text.ADC_Cmd)
    ADC_DeInit                               0x0800028d   Thumb Code    32  hk32f030m_adc.o(.text.ADC_DeInit)
    ADC_GetCalibrationFactor                 0x080002b1   Thumb Code    40  hk32f030m_adc.o(.text.ADC_GetCalibrationFactor)
    ADC_GetConversionValue                   0x080002dd   Thumb Code     6  hk32f030m_adc.o(.text.ADC_GetConversionValue)
    ADC_GetFlagStatus                        0x080002e3   Thumb Code    24  hk32f030m_adc.o(.text.ADC_GetFlagStatus)
    ADC_Init                                 0x080002fd   Thumb Code    32  hk32f030m_adc.o(.text.ADC_Init)
    ADC_StartOfConversion                    0x08000321   Thumb Code    10  hk32f030m_adc.o(.text.ADC_StartOfConversion)
    ADC_StructInit                           0x0800032b   Thumb Code    14  hk32f030m_adc.o(.text.ADC_StructInit)
    Delay                                    0x08000339   Thumb Code    26  hardware.o(.text.Delay)
    EXTI1_IRQHandler                         0x08000353   Thumb Code    20  hk32f030m_it.o(.text.EXTI1_IRQHandler)
    EXTI_ClearITPendingBit                   0x08000369   Thumb Code     8  hk32f030m_exti.o(.text.EXTI_ClearITPendingBit)
    EXTI_DeInit                              0x08000375   Thumb Code    20  hk32f030m_exti.o(.text.EXTI_DeInit)
    EXTI_GetITStatus                         0x08000389   Thumb Code    24  hk32f030m_exti.o(.text.EXTI_GetITStatus)
    EXTI_Init                                0x080003a1   Thumb Code    92  hk32f030m_exti.o(.text.EXTI_Init)
    GPIO_Init                                0x08000401   Thumb Code   136  hk32f030m_gpio.o(.text.GPIO_Init)
    GPIO_ReadInputDataBit                    0x08000489   Thumb Code    10  hk32f030m_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_ResetBits                           0x08000493   Thumb Code     4  hk32f030m_gpio.o(.text.GPIO_ResetBits)
    HardFault_Handler                        0x08000497   Thumb Code     2  hk32f030m_it.o(.text.HardFault_Handler)
    NMI_Handler                              0x08000499   Thumb Code     2  hk32f030m_it.o(.text.NMI_Handler)
    NVIC_Init                                0x0800049d   Thumb Code    68  hk32f030m_misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x080004ed   Thumb Code     2  hk32f030m_it.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x080004f1   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x0800050d   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x08000529   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08000545   Thumb Code    24  hk32f030m_rcc.o(.text.RCC_APB2PeriphResetCmd)
    SVC_Handler                              0x08000561   Thumb Code     2  hk32f030m_it.o(.text.SVC_Handler)
    SYSCFG_EXTILineConfig                    0x08000565   Thumb Code    32  hk32f030m_syscfg.o(.text.SYSCFG_EXTILineConfig)
    SysTick_Handler                          0x08000589   Thumb Code     2  hk32f030m_it.o(.text.SysTick_Handler)
    SystemInit                               0x0800058d   Thumb Code   220  system_hk32f030m.o(.text.SystemInit)
    blit_line                                0x0800067d   Thumb Code    20  drawing.o(.text.blit_line)
    breakout                                 0x08000691   Thumb Code   372  main.o(.text.breakout)
    clear_framebuffer                        0x0800080d   Thumb Code    20  drawing.o(.text.clear_framebuffer)
    control_matrix_led                       0x08000821   Thumb Code   308  hardware.o(.text.control_matrix_led)
    draw_dot                                 0x0800095d   Thumb Code    20  drawing.o(.text.draw_dot)
    draw_line                                0x08000971   Thumb Code   104  drawing.o(.text.draw_line)
    draw_marquee                             0x080009d9   Thumb Code   116  drawing.o(.text.draw_marquee)
    init_button_gpios                        0x08000a55   Thumb Code    44  hardware.o(.text.init_button_gpios)
    init_dpad_gpio                           0x08000a85   Thumb Code   112  hardware.o(.text.init_dpad_gpio)
    init_gpio_clocks                         0x08000afd   Thumb Code    38  hardware.o(.text.init_gpio_clocks)
    init_matrix_gpios                        0x08000b25   Thumb Code   104  hardware.o(.text.init_matrix_gpios)
    intro                                    0x08000b95   Thumb Code   312  intro.o(.text.intro)
    main                                     0x08000d01   Thumb Code    44  main.o(.text.main)
    random                                   0x08000d2d   Thumb Code    48  prng.o(.text.random)
    seed                                     0x08000d5d   Thumb Code    24  prng.o(.text.seed)
    sleep                                    0x08000d79   Thumb Code    92  hardware.o(.text.sleep)
    snake                                    0x08000dd9   Thumb Code   520  snake.o(.text.snake)
    update_buttons                           0x08000ff5   Thumb Code   160  hardware.o(.text.update_buttons)
    update_screen                            0x080010ad   Thumb Code    68  drawing.o(.text.update_screen)
    __scatterload_copy                       0x080010f5   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08001103   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08001105   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x08001114   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001134   Number         0  anon$$obj.o(Region$$Table)
    font                                     0x20000000   Data         160  bitfont.o(.data.font)
    framebuffer                              0x200000a0   Data          22  drawing.o(.data.framebuffer)
    matrix_pins                              0x200000b6   Data          22  hardware.o(.data.matrix_pins)
    matrix_ports                             0x200000cc   Data          44  hardware.o(.data.matrix_ports)
    analog                                   0x200000f8   Data           1  hardware.o(.bss.analog)
    button_change                            0x200000f9   Data           1  hardware.o(.bss.button_change)
    buttons                                  0x200000fa   Data           1  hardware.o(.bss.buttons)
    state                                    0x20000100   Data           8  prng.o(.bss.state)
    __initial_sp                             0x20000308   Data           0  keil_startup_hk32f030m.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001230, Max: 0x00004000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001134, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO         1009    RESET               keil_startup_hk32f030m.o
    0x080000c0   0x080000c0   0x00000000   Code   RO         1016  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO         1031    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO         1034    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1036    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1038    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO         1039    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         1041    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         1043    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO         1032    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO         1010    .text               keil_startup_hk32f030m.o
    0x080000f0   0x080000f0   0x00000060   Code   RO         1027    .text               mc_p.l(uldiv.o)
    0x08000150   0x08000150   0x00000024   Code   RO         1029    .text               mc_p.l(memseta.o)
    0x08000174   0x08000174   0x0000003e   Code   RO         1049    .text               mc_p.l(uidiv_div0.o)
    0x080001b2   0x080001b2   0x00000002   PAD
    0x080001b4   0x080001b4   0x00000050   Code   RO         1051    .text               mc_p.l(idiv_div0.o)
    0x08000204   0x08000204   0x00000020   Code   RO         1055    .text               mc_p.l(llshl.o)
    0x08000224   0x08000224   0x00000022   Code   RO         1057    .text               mc_p.l(llushr.o)
    0x08000246   0x08000246   0x00000002   PAD
    0x08000248   0x08000248   0x00000024   Code   RO         1059    .text               mc_p.l(init.o)
    0x0800026c   0x0800026c   0x0000000a   Code   RO          160    .text.ADC_ChannelConfig  hk32f030m_adc.o
    0x08000276   0x08000276   0x00000004   Code   RO          180    .text.ADC_ClearFlag  hk32f030m_adc.o
    0x0800027a   0x0800027a   0x00000012   Code   RO          140    .text.ADC_Cmd       hk32f030m_adc.o
    0x0800028c   0x0800028c   0x00000024   Code   RO          134    .text.ADC_DeInit    hk32f030m_adc.o
    0x080002b0   0x080002b0   0x0000002c   Code   RO          168    .text.ADC_GetCalibrationFactor  hk32f030m_adc.o
    0x080002dc   0x080002dc   0x00000006   Code   RO          174    .text.ADC_GetConversionValue  hk32f030m_adc.o
    0x080002e2   0x080002e2   0x00000018   Code   RO          178    .text.ADC_GetFlagStatus  hk32f030m_adc.o
    0x080002fa   0x080002fa   0x00000002   PAD
    0x080002fc   0x080002fc   0x00000024   Code   RO          136    .text.ADC_Init      hk32f030m_adc.o
    0x08000320   0x08000320   0x0000000a   Code   RO          172    .text.ADC_StartOfConversion  hk32f030m_adc.o
    0x0800032a   0x0800032a   0x0000000e   Code   RO          138    .text.ADC_StructInit  hk32f030m_adc.o
    0x08000338   0x08000338   0x0000001a   Code   RO           61    .text.Delay         hardware.o
    0x08000352   0x08000352   0x00000014   Code   RO           12    .text.EXTI1_IRQHandler  hk32f030m_it.o
    0x08000366   0x08000366   0x00000002   PAD
    0x08000368   0x08000368   0x0000000c   Code   RO          282    .text.EXTI_ClearITPendingBit  hk32f030m_exti.o
    0x08000374   0x08000374   0x00000014   Code   RO          268    .text.EXTI_DeInit   hk32f030m_exti.o
    0x08000388   0x08000388   0x00000018   Code   RO          278    .text.EXTI_GetITStatus  hk32f030m_exti.o
    0x080003a0   0x080003a0   0x00000060   Code   RO          270    .text.EXTI_Init     hk32f030m_exti.o
    0x08000400   0x08000400   0x00000088   Code   RO          360    .text.GPIO_Init     hk32f030m_gpio.o
    0x08000488   0x08000488   0x0000000a   Code   RO          366    .text.GPIO_ReadInputDataBit  hk32f030m_gpio.o
    0x08000492   0x08000492   0x00000004   Code   RO          376    .text.GPIO_ResetBits  hk32f030m_gpio.o
    0x08000496   0x08000496   0x00000002   Code   RO            4    .text.HardFault_Handler  hk32f030m_it.o
    0x08000498   0x08000498   0x00000002   Code   RO            2    .text.NMI_Handler   hk32f030m_it.o
    0x0800049a   0x0800049a   0x00000002   PAD
    0x0800049c   0x0800049c   0x00000050   Code   RO          513    .text.NVIC_Init     hk32f030m_misc.o
    0x080004ec   0x080004ec   0x00000002   Code   RO            8    .text.PendSV_Handler  hk32f030m_it.o
    0x080004ee   0x080004ee   0x00000002   PAD
    0x080004f0   0x080004f0   0x0000001c   Code   RO          559    .text.RCC_AHBPeriphClockCmd  hk32f030m_rcc.o
    0x0800050c   0x0800050c   0x0000001c   Code   RO          583    .text.RCC_APB1PeriphClockCmd  hk32f030m_rcc.o
    0x08000528   0x08000528   0x0000001c   Code   RO          581    .text.RCC_APB2PeriphClockCmd  hk32f030m_rcc.o
    0x08000544   0x08000544   0x0000001c   Code   RO          587    .text.RCC_APB2PeriphResetCmd  hk32f030m_rcc.o
    0x08000560   0x08000560   0x00000002   Code   RO            6    .text.SVC_Handler   hk32f030m_it.o
    0x08000562   0x08000562   0x00000002   PAD
    0x08000564   0x08000564   0x00000024   Code   RO          681    .text.SYSCFG_EXTILineConfig  hk32f030m_syscfg.o
    0x08000588   0x08000588   0x00000002   Code   RO           10    .text.SysTick_Handler  hk32f030m_it.o
    0x0800058a   0x0800058a   0x00000002   PAD
    0x0800058c   0x0800058c   0x000000f0   Code   RO          995    .text.SystemInit    system_hk32f030m.o
    0x0800067c   0x0800067c   0x00000014   Code   RO           46    .text.blit_line     drawing.o
    0x08000690   0x08000690   0x0000017c   Code   RO           21    .text.breakout      main.o
    0x0800080c   0x0800080c   0x00000014   Code   RO           36    .text.clear_framebuffer  drawing.o
    0x08000820   0x08000820   0x0000013c   Code   RO           73    .text.control_matrix_led  hardware.o
    0x0800095c   0x0800095c   0x00000014   Code   RO           42    .text.draw_dot      drawing.o
    0x08000970   0x08000970   0x00000068   Code   RO           40    .text.draw_line     drawing.o
    0x080009d8   0x080009d8   0x0000007c   Code   RO           50    .text.draw_marquee  drawing.o
    0x08000a54   0x08000a54   0x00000030   Code   RO           69    .text.init_button_gpios  hardware.o
    0x08000a84   0x08000a84   0x00000078   Code   RO           71    .text.init_dpad_gpio  hardware.o
    0x08000afc   0x08000afc   0x00000026   Code   RO           65    .text.init_gpio_clocks  hardware.o
    0x08000b22   0x08000b22   0x00000002   PAD
    0x08000b24   0x08000b24   0x00000070   Code   RO           67    .text.init_matrix_gpios  hardware.o
    0x08000b94   0x08000b94   0x0000016c   Code   RO          123    .text.intro         intro.o
    0x08000d00   0x08000d00   0x0000002c   Code   RO           25    .text.main          main.o
    0x08000d2c   0x08000d2c   0x00000030   Code   RO          102    .text.random        prng.o
    0x08000d5c   0x08000d5c   0x0000001c   Code   RO          100    .text.seed          prng.o
    0x08000d78   0x08000d78   0x00000060   Code   RO           77    .text.sleep         hardware.o
    0x08000dd8   0x08000dd8   0x0000021c   Code   RO          113    .text.snake         snake.o
    0x08000ff4   0x08000ff4   0x000000b8   Code   RO           75    .text.update_buttons  hardware.o
    0x080010ac   0x080010ac   0x00000048   Code   RO           38    .text.update_screen  drawing.o
    0x080010f4   0x080010f4   0x0000000e   Code   RO         1063    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08001102   0x08001102   0x00000002   Code   RO         1064    i.__scatterload_null  mc_p.l(handlers.o)
    0x08001104   0x08001104   0x0000000e   Code   RO         1065    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08001112   0x08001112   0x00000002   PAD
    0x08001114   0x08001114   0x00000020   Data   RO         1062    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001138, Size: 0x00000308, Max: 0x00000800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001138   0x000000a0   Data   RW           94    .data.font          bitfont.o
    0x200000a0   0x080011d8   0x00000016   Data   RW           52    .data.framebuffer   drawing.o
    0x200000b6   0x080011ee   0x00000016   Data   RW           82    .data.matrix_pins   hardware.o
    0x200000cc   0x08001204   0x0000002c   Data   RW           83    .data.matrix_ports  hardware.o
    0x200000f8        -       0x00000001   Zero   RW           81    .bss.analog         hardware.o
    0x200000f9        -       0x00000001   Zero   RW           80    .bss.button_change  hardware.o
    0x200000fa        -       0x00000001   Zero   RW           79    .bss.buttons        hardware.o
    0x200000fb        -       0x00000001   Zero   RW           84    .bss.control_matrix_led.current_x  hardware.o
    0x200000fc        -       0x00000001   Zero   RW           85    .bss.control_matrix_led.current_y  hardware.o
    0x200000fd   0x08001230   0x00000003   PAD
    0x20000100        -       0x00000008   Zero   RW          104    .bss.state          prng.o
    0x20000108        -       0x00000200   Zero   RW         1007    STACK               keil_startup_hk32f030m.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0        160          0        483   bitfont.o
       360         28          0         22          0       3370   drawing.o
       940         56          0         66          5       6857   hardware.o
       202         12          0          0          0       7478   hk32f030m_adc.o
       152          8          0          0          0       2791   hk32f030m_exti.o
       150          0          0          0          0       6434   hk32f030m_gpio.o
        30          0          0          0          0       1070   hk32f030m_it.o
        80         12          0          0          0       2541   hk32f030m_misc.o
       112         16          0          0          0       9745   hk32f030m_rcc.o
        36          4          0          0          0       1852   hk32f030m_syscfg.o
       364         52          0          0          0       1339   intro.o
        28          8        192          0        512        716   keil_startup_hk32f030m.o
       424          8          0          0          0       2065   main.o
        76          4          0          0          8        793   prng.o
       540         24          0          0          0       2380   snake.o
       240         20          0          0          0       2794   system_hk32f030m.o

    ----------------------------------------------------------------------
      3748        252        224        248        528      52708   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        80          6          0          0          0         72   idiv_div0.o
        36          8          0          0          0         68   init.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0        100   memseta.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
       432         22          0          0          0        532   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       426         22          0          0          0        532   mc_p.l

    ----------------------------------------------------------------------
       432         22          0          0          0        532   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4180        274        224        248        528      52956   Grand Totals
      4180        274        224        248        528      52956   ELF Image Totals
      4180        274        224        248          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4404 (   4.30kB)
    Total RW  Size (RW Data + ZI Data)               776 (   0.76kB)
    Total ROM Size (Code + RO Data + RW Data)       4652 (   4.54kB)

==============================================================================

